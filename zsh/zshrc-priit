#
# ############## LOCAL ENV ONLY ####################
#

# default editor
export EDITOR="vim -u /etc/vim/vimrc-priit"

# for remote servers
export VIMUSER=priit

export PAGER="/bin/sh -c \"col -b | vim -u /etc/vim/vimrc-priit -R -c 'set nonumber' -\""

alias ie8='kvm -cpu qemu32,-nx -usb -usbdevice tablet -drive file=/home/priit/vendor/winxp-ie8.img,cache=writeback -soundhw ac97'
alias pdf="evince"
alias play='totem'
alias view='eog'

# check-for-changes can be really slow.
# you should disable it, if you work with large repositories    
zstyle ':vcs_info:*' disable bzr cdv darcs mtn svk tla
#zstyle ':vcs_info:*:prompt:*' check-for-changes true
zstyle ':vcs_info:*:prompt:*' unstagedstr '¹'  # display ¹ if there are unstaged changes
zstyle ':vcs_info:*:prompt:*' stagedstr '²'    # display ² if there are staged changes
zstyle ':vcs_info:*:prompt:*' actionformats "${FMT_BRANCH}${FMT_ACTION}" "${FMT_PATH}"
zstyle ':vcs_info:*:prompt:*' formats       "${FMT_BRANCH}"              "${FMT_PATH}"
zstyle ':vcs_info:*:prompt:*' nvcsformats   ""                             "%~"         

#`chpwd' checks that standard output is terminal
# then puts the directory in the title bar if the terminal
# is an xterm or some close relative.
# last directory: ${PWD##*/} or %c or %.
#   precmd() { print -Pn "\e]0; ${PWD##*/} %c\a" }
chpwd() { print -Pn "\e]0;%.\a" }
precmd() { print -Pn "\e]0;%.\a" }

function precmd {       
  vcs_info 'prompt'          
}      

function lprompt {
    local brackets=$1
    local color1=$2  
    local color2=$3  
    local at="${color1}@${PR_RESET}"                        

    #if [[ `hostname` == "aa" ]]; then
      #local user_host="%m"                    
    #else
      #local user_host="${color2}%n${at}${color2}%m"                    
    #fi

    local bracket_open="${color1}${brackets[1]}${PR_RESET}"
    local bracket_close="${color1}${brackets[2]}"          
                                                             
    local git='$vcs_info_msg_0_'                           
    local cwd="${color2}%B%1~%b"

    PROMPT="${PR_RESET}${user_host}${bracket_open}${git}${bracket_close}${PR_RESET}: "
}                                                                                        

function rprompt {
    local brackets=$1
    local color1=$2  
    local color2=$3  
                     
    local bracket_open="${color1}${brackets[1]}${PR_RESET}"
    local bracket_close="${color1}${brackets[2]}${PR_RESET}"
    local colon="${color1}:"                                
    local at="${color1}@${PR_RESET}"                        
                                                            
    local vcs_cwd='${${vcs_info_msg_1_%%.}/$HOME/~}'        
    local cwd="${color2}%B%20<..<${vcs_cwd}%<<%b"
    local inner="${user_host}${colon}${cwd}"

    RPROMPT="${PR_RESET}${bracket_open}${inner}${bracket_close}${PR_RESET}"
}

lprompt '' $BR_BRIGHT_BLACK $PR_WHITE


# Load RVM and set promt
if [[ -s "$HOME/.rvm/bin/rvm-prompt" ]] ; then
  export RPS1="$RPS1   \$(~/.rvm/bin/rvm-prompt v g)"
  source $HOME/.rvm/scripts/rvm
elif [[ -s "/usr/local/rvm/scripts/rvm" ]] ; then
  export RPS1="$RPS1   \$(rvm-prompt v g)"
  source /usr/local/rvm/scripts/rvm
fi

if [ -f '/etc/profile.d/rvm.sh' ]; then
  source /etc/profile.d/rvm.sh
fi

# GIT branch info
setopt prompt_subst

autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '%F{99}[%F{2}%b%F{99}]%f'
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{3}%r'
zstyle ':vcs_info:*' enable git cvs svn

# or use pre_cmd, see man zshcontrib
vcs_info_wrapper() {
  vcs_info
  if [ -n "$vcs_info_msg_0_" ]; then
    echo "%{$fg[grey]%}${vcs_info_msg_0_}%{$reset_color%}$del"
  fi
}
export PS1=$'%n$(vcs_info_wrapper): '

#export RUBY_HEAP_MIN_SLOTS=1000000
export RUBY_HEAP_SLOTS_INCREMENT=1000000
export RUBY_HEAP_SLOTS_GROWTH_FACTOR=1
export RUBY_GC_MALLOC_LIMIT=1000000000
export RUBY_HEAP_FREE_MIN=500000

export AWS_CONFIG_FILE=$HOME/.ssh/amazon/aws_config_file
source $HOME/.ssh/amazon-gitlab.eu-priit/credentials.sh

source ~/.rubotorc

# prefer rbenv over rvm
if [[ -s "$HOME/.rbenv" ]]; then
  # rbenv loading
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
elif [[ -s "$HOME/.rvm/scripts/rvm" ]]; then
  # fallback to rvm
  source "$HOME/.rvm/scripts/rvm"
fi

#
# ####### LOCAL ENV END ########
#
