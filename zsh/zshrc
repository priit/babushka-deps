setopt nobeep # no need for beeps

# default locales
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# longer history
HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=100000
setopt appendhistory notify

# git 
alias ga="git add"
alias gs="git status"
alias gl="git log --max-count=50"
alias gss="git push"
alias gll="git pull origin master"
alias gd="git diff"
alias gca="git add . && git commit -v -a"
alias gc="git commit -v"
alias gb="git branch "
alias gco="git checkout "
alias grc="git reset --soft HEAD~1"

# ruby
alias r="ruby -I test -I spec "
alias gemi="gem install --no-ri --no-rdoc "
alias u='unicorn_rails'
alias pu='RAILS_ENV=production unicorn_rails'

# cd to rvm gem directory
alias cdgem="cd \$(rvm gemhome)/gems"

# general
alias ls="ls -hp --group-directories-first "
alias s='sudo'

alias ps="ps afxww"
alias free="free -m"
alias update="sudo aptitude update && sudo aptitude safe-upgrade"
alias in="sudo apt-get install"
alias out="sudo apt-get remove"

# stupid stuff
alias "cd.."="cd .."
alias "cd..."="cd ../../"
alias "cd...."="cd ../../../"
alias "cd....."="cd ../../../../"
alias "cd......"="cd ../../../../../"
alias "cd......."="cd ../../../../../../"
alias "cd........"="cd ../../../../../../../"
alias "cd........."="cd ../../../../../../../../"
alias "cd.........."="cd ../../../../../../../../../"
setopt autocd # change to dirs without cd

# completions
autoload -U compinit
compinit -C
# case-insensitive (all),partial-word and then substring completion
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# color promt
# from http://kriener.org/articles/2009/06/04/zsh-prompt-magic
setopt prompt_subst
autoload colors    
colors             
autoload -Uz vcs_info

# left prompt
if [  -f /opt/production ]; then
  export PS1="%{$fg[red]%}%n@%m: %{$reset_color%}"
elif [ -f /opt/staging ]; then
  export PS1="%{$fg[yellow]%}%n@%m: %{$reset_color%}"
else
  export PS1="%n: "
fi

# right prompt
export RPS1="%~"

# Shortcut for `bundle exec rails` and `bundle exec rake`.
# If bin/rails and bin/rake are available, use them instead as they are much
# faster to execute than `bundle exec`.
# from http://blog.55minutes.com/2012/01/invoke-rails-and-rake-faster-and-with-fewer-mistakes/
function ra() {
# stupid but works with exact match, old one matches wrongly as "gen" to "generate" etc.
if [[ $1 == "g" || $1 == "generate" || $1 == "c"  || $1 == "console"   ||
      $1 == "s" || $1 == "server"   || $1 == "db" || $1 == "dbconsole" || 
      $1 == "new" ]]; then

    # Rails 4
    if [ -x bin/rails ]; then
      bin/rails "$@"

    # Rails 3
    elif [ -x script/rails ]; then
      script/rails "$@"

    # RAILS 1 and 2, yay
    elif [ -x script/console ]; then
      if [[ $1 == "g" || $1 == "generate" ]]; then
        script/generate ${@:2}
      elif [[ $1 == "c" || $1 == "console" ]]; then
        script/console ${@:2}
      elif [[ $1 == "s" || $1 == "server" ]]; then
        script/server ${@:2}
      elif [[ $1 == "db" || $1 == "dbconsole" ]]; then
        script/dbconsole ${@:2}
      else
        echo 'no rails 1 or 2 command'
      fi
    else
      rails "$@"
    fi
  else
    if [ -x bin/rake ]; then
      bin/rake "$@"
    elif [ -x script/rake ]; then
      script/rake "$@"
    else
      rake "$@"
    fi
  fi
}

# prefer rbenv over rvm
if [[ -s "/usr/local/rbenv" ]]; then
  # rbenv loading
  export PATH="/usr/local/rbenv/bin:$PATH"
  eval "$(rbenv init -)"
elif [[ -s "$HOME/.rbenv" ]]; then
  # rbenv loading
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
elif [[ -s "$HOME/.rvm/scripts/rvm" ]]; then
  # fallback to rvm
  source "$HOME/.rvm/scripts/rvm"
fi

[[ -s "/etc/zsh/zshrc-priit" ]] && source "/etc/zsh/zshrc-priit" # priit custom stuff if present
