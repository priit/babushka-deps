#
# sshd config
#
dep 'sshd_config', :username do
  met? { '/etc/ssh/sshd_config'.p.grep(/^# Generated by babushka/) }
  meet do
    '/etc/ssh/sshd_config'.p.copy('/etc/ssh/sshd_config.backup')
    render_erb 'ssh/sshd_config', :to => '/etc/ssh/sshd_config'
  end
  after { shell '/etc/init.d/ssh restart' }
end

dep 'sshd_user_env_on' do
  requires 'ssh.conf'

  met? { '/etc/ssh/sshd_config'.p.grep(/^PermitUserEnvironment yes/) }
  meet do 
    '/etc/ssh/sshd_config'.p.append('PermitUserEnvironment yes') 
  end
  after { shell '/etc/init.d/ssh restart' }
end

#
# ssh config
#
dep 'ssh_authorized_key', :username, :key do
  met? do
    shell? "fgrep '#{key}' '#{ssh_dir / 'authorized_keys'}'", :sudo => sudo?

    # if "#{ssh_dir}/authorized_keys".p.grep(/# Babushka added key for #{username}/)
      # true
    # else
      # confirm("Didn't find authorized keys. Should we skip ssh authorized keys?")
    # end
  end

  meet do
    key.ask('Please provide SSH key')
    requires 'ssh_init_authorized_keys'.with(username)
    (ssh_dir + '/authorized_keys').p.append("# Babushka added key for #{username}\n")
    (ssh_dir + '/authorized_keys').p.append(key)
  end

  def ssh_dir
    "/home/#{username}/.ssh"
  end

  def group
    shell "id -gn #{username}"
  end

  def sudo?
    @sudo ||= username != shell('whoami')
  end
end

dep 'ssh_init_authorized_keys', :username do
  met? { "#{ssh_dir}/authorized_keys".p.exists? }
  meet do
    shell "mkdir -p -m 700 '#{ssh_dir}'" and
    shell "touch '#{ssh_dir}/authorized_keys'" and
    shell "chown -R #{username}:#{group} '#{ssh_dir}'" and
    shell "chmod 644 #{(ssh_dir / 'authorized_keys')}"
  end

  def ssh_dir
    "/home/#{username}/.ssh"
  end

  def group
    shell "id -gn #{username}"
  end
end
