dep 'ssh.conf', :username do
  met? { '/etc/ssh/sshd_config'.p.grep(/^# Generated by babushka/) }
  meet do
    '/etc/ssh/sshd_config'.p.copy('/etc/ssh/sshd_config.backup')
    render_erb 'ssh/sshd_config', :to => '/etc/ssh/sshd_config'
  end
  after { shell '/etc/init.d/ssh restart' }
end

dep 'ssh.permit_user_env' do
  requires 'ssh.conf'

  met? { '/etc/ssh/sshd_config'.p.grep(/^PermitUserEnvironment yes/) }
  meet do 
    '/etc/ssh/sshd_config'.p.append('PermitUserEnvironment yes') 
  end
  after { shell '/etc/init.d/ssh restart' }
end

dep 'ssh.init_authorized_keys', :username do
  def ssh_dir
    "/home/#{username}/.ssh"
  end

  def group
    shell "id -gn #{username}"
  end

  met? { "#{ssh_dir}/authorized_keys".p.exists? }
  meet do
    shell "mkdir -p -m 700 '#{ssh_dir}'"
    shell "touch '#{ssh_dir}/authorized_keys'"
    shell "chown -R #{username}:#{group} '#{ssh_dir}'"
    shell "chmod 644 #{(ssh_dir / 'authorized_keys')}"
  end
end

dep 'ssh.authorized_keys', :username, :key do
  requires 'ssh.init_authorized_keys'.with(username)
  key.ask('Please provide SSH key')

  def ssh_dir
    "/home/#{username}/.ssh"
  end

  def group
    shell "id -gn #{username}"
  end

  met? do
    if "#{ssh_dir}/authorized_keys".p.grep(/# Babushka added key for #{username}/)
      true
    else
      confirm('Should we skip ssh keys?')
    end
  end

  meet do
    (ssh_dir + '/authorized_keys').p.append("# Babushka added key for #{username}\n")
    (ssh_dir + '/authorized_keys').p.append(key)
  end
end
