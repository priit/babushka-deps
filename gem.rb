require 'yaml'

dep 'gemrc', :username do
  met? do
    shell? "diff -I '# Generated by babushka' #{source_path} #{gemrc_path}"
  end

  meet do
    render_erb 'gem/gemrc', to: gemrc_path
    shell "chown #{username}:#{username} #{gemrc_path}"
  end

  def gemrc_path
    if username == 'root'
      "/root/.gemrc"
    else
      "/home/#{username}/.gemrc"
    end
  end

  def source_path
    @source_path ||= erb_path_for 'gem/gemrc'
  end
end

# passenger runtime is ruby version agnostic,
# thus no need to install under each username
# and passenger will always stay under root user
# for easier update and management
dep 'passenger' do
  requires 'ruby-dev.lib'
  requires 'libcurl4-openssl-dev.lib'

  met? do
    puts 'passenger path'
    puts so_path
    # shell?("gem list --local passenger | grep passenger", as: 'root') && so_path.p.exists?
    true
  end

  meet do
    log_shell "Passenger gem install...",  "gem install --no-ri --no-rdoc passenger", as: 'root'
    log_shell "Passenger nginx install...",
      "passenger-install-nginx-module -a --languages ruby", as: 'root'
  end

  def latest_version
    spec = YAML.parse(shell("gem specification passenger"))
    spec.to_ruby.version.to_s
  end

  def path
    shell("gem env gemdir")
  end

  def so_path
    "#{path}/gems/passenger-#{latest_version}/ext/nginx/mod_passenger.so"
  end
end

dep 'nginx_init' do
  met? do
    break false if !init_path.p.exists?

    if shell? "grep '# Generated by babushka' #{init_path}"
      shell? "diff -I '# Generated by babushka' #{source_path} #{init_path}"
    else 
      puts 'Skipped /etc/init.d/nginx update, probably not managed by babushka'
      true
    end
  end

  meet do
    render_erb 'gem/init_nginx', to: init_path
  end

  def init_path
    "/etc/init.d/nginx"
  end

  def source_path
    @source_path ||= erb_path_for 'gem/init_nginx'
  end
end

